services:
  db:
    container_name: booking_db
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: moviebooking
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    container_name: booking_backend
    build: ./Backend/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./Backend/app:/app
    working_dir: /app
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: moviebooking
      POSTGRES_SERVER: db
      POSTGRES_PORT: 5432
      SECRET_KEY: supersecretkey
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: booking_frontend
    image: python:3.9
    command: python -m http.server 5500
    volumes:
      - ./Frontend:/app
    working_dir: /app
    ports:
      - "5500:5500"
    depends_on:
      - backend

volumes:
  postgres_data: 